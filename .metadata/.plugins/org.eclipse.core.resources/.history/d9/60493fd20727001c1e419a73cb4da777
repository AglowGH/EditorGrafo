import javax.swing.*;
import javax.swing.border.CompoundBorder;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class MyFrame extends JFrame 
{
	private static final long serialVersionUID = 1L;

	public MyPanel panel;
	public JButton cambiarNombre;
	public JButton cambiarPeso;
	public JPanel botones;

	public static String nombre = null;
	public static int peso = 0;
	public static Nodo verticeSeleccionado = null;
	public static Arista aristaSeleccionada = null;
	public static boolean activarMouse = true;
	
	MyFrame()
	{
		
	}
	
	public void mostrarFrame()
	{
		
		setLayout(new FlowLayout(FlowLayout.LEFT,50,50));
		
		panel = new MyPanel();
		add(panel);
		
		botones = new JPanel();
		botones.setLayout(new BoxLayout(botones,BoxLayout.Y_AXIS));
		botones.setBorder(new CompoundBorder(
                BorderFactory.createEmptyBorder(0,10,10,10),
                BorderFactory.createLineBorder(Color.RED)
				));
		add(botones);
		
		cambiarNombre = new JButton("Cambiar Nombre");
		cambiarNombre.setSize(100,50);
		cambiarNombre.addActionListener(new ActionListener()
				{
					@Override
					public void actionPerformed(ActionEvent e)
					{
						activarMouse = false;
						obtenerNombre();
						MyPanel.coordenadas = null;
						activarMouse = true;
					}
					
				});
		botones.add(cambiarNombre);
		
		cambiarPeso = new JButton("Cambiar Peso");
		cambiarPeso.setSize(100,50);
		cambiarPeso.addActionListener(new ActionListener()
				{
					@Override
					public void actionPerformed(ActionEvent e)
					{
						activarMouse = false;
						System.out.println("Aqui");
						obtenerPeso();
						activarMouse =true;
					}
				});
		botones.add(cambiarPeso);
		
		pack();
		
		setLocationRelativeTo(null);
		setVisible(true);
		this.setResizable(false);
		
		setDefaultCloseOperation(EXIT_ON_CLOSE);
		setTitle("Test1");
		
	}
	
	public void obtenerNombre()
	{
		if(verticeSeleccionado != null) 
		{
			nombre = (String)JOptionPane.showInputDialog("Escribe Nombre: ");
			
			if(nombre == null || nombre.equals(""))
			{
				nombre = verticeSeleccionado.getNombre();
				JOptionPane.showMessageDialog(botones,"Nombre no valido!!!!");
			}
			verticeSeleccionado = null;
		}else
		{
			JOptionPane.showMessageDialog(botones,"Selecciona un vertice!!!!");
		}
	}
	
	public void obtenerPeso()
	{
		if(aristaSeleccionada != null)
		{
			String aux = (String) JOptionPane.showInputDialog("Escribe peso: ");
			
			if(aux == null || aux.equals(""))
			{
				peso = 0;
				aristaSeleccionada = null;
				return;
			}
			
			int auxN;
			try {
				auxN = Integer.parseInt(aux);
			}catch(Exception e) {
				JOptionPane.showMessageDialog(botones, "Solo escribe numeros.");
				auxN = 0;
			}
			
			if(auxN < 0)
			{
				peso = 0;
				JOptionPane.showMessageDialog(botones,"Solo pesos positivos");
				aristaSeleccionada = null;
				return;
			}
			
			peso = auxN;
			aristaSeleccionada = null;
			
		}else
		{
			JOptionPane.showMessageDialog(botones,"Escoje una arista!!!");
		}
		
	}
}